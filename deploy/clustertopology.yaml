apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: clustertopology-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clustertopologies.edge.fdse.lab
spec:
  group: edge.fdse.lab
  names:
    kind: ClusterTopology
    listKind: ClusterTopologyList
    plural: clustertopologies
    singular: clustertopology
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterTopology is the Schema for the clustertopologies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterTopologySpec defines the desired state of ClusterTopology
            properties:
              cluster:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file Cluster name'
                type: string
              topologys:
                description: Topologys
                items:
                  description: TopologyInfo contains information about network costs for a particular Topology Key.
                  properties:
                    originList:
                      description: OriginList for a particular origin.
                      items:
                        description: OriginInfo contains information about network costs for a particular Origin.
                        properties:
                          costList:
                            description: Costs for the particular origin.
                            items:
                              description: CostInfo contains information about networkCosts.
                              properties:
                                bandwidthAllocated:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Bandwidth allocated between origin and destination.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                bandwidthCapacity:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Bandwidth capacity between origin and destination.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                destination:
                                  description: Name of the destination (e.g., Region Name, Zone Name).
                                  type: string
                                networkCost:
                                  description: Network Cost between origin and destination (e.g., Dijkstra shortest path, etc)
                                  format: int64
                                  minimum: 0
                                  type: integer
                              required:
                              - destination
                              - networkCost
                              type: object
                            type: array
                          origin:
                            description: Name of the origin (e.g., Region Name, Zone Name).
                            type: string
                          properties:
                            additionalProperties:
                              type: string
                            description: properties of the origin`
                            type: object
                        required:
                        - origin
                        type: object
                      type: array
                    topologyKey:
                      description: Topology key (e.g., "topology.kubernetes.io/network").
                      type: string
                  required:
                  - originList
                  - topologyKey
                  type: object
                type: array
            required:
            - cluster
            - topologys
            type: object
          status:
            description: ClusterTopologyStatus defines the observed state of ClusterTopology
            properties:
              nodeCount:
                description: The total number of nodes in the cluster
                format: int64
                minimum: 0
                type: integer
              weightCalculationTime:
                description: The calculation time for the weights in the  topology CRD
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clustertopology-controller-manager
  namespace: clustertopology-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: clustertopology-leader-election-role
  namespace: clustertopology-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: clustertopology-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - get
- apiGroups:
  - edge.fdse.lab
  resources:
  - clustertopologies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - edge.fdse.lab
  resources:
  - clustertopologies/finalizers
  verbs:
  - update
- apiGroups:
  - edge.fdse.lab
  resources:
  - clustertopologies/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustertopology-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustertopology-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: clustertopology-leader-election-rolebinding
  namespace: clustertopology-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: clustertopology-leader-election-role
subjects:
- kind: ServiceAccount
  name: clustertopology-controller-manager
  namespace: clustertopology-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustertopology-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustertopology-manager-role
subjects:
- kind: ServiceAccount
  name: clustertopology-controller-manager
  namespace: clustertopology-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustertopology-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustertopology-proxy-role
subjects:
- kind: ServiceAccount
  name: clustertopology-controller-manager
  namespace: clustertopology-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f45900c3.fdse.lab
kind: ConfigMap
metadata:
  name: clustertopology-manager-config
  namespace: clustertopology-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: clustertopology-controller-manager-metrics-service
  namespace: clustertopology-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: clustertopology-controller-manager
  namespace: clustertopology-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: meixie/clustertopology:v0.0.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: clustertopology-controller-manager
      terminationGracePeriodSeconds: 10
